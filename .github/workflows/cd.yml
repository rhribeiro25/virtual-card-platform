# -----------------------------------------------
# üöÄ CD - Deploy and Promote to Heroku
# -----------------------------------------------
name: CD - Promoting release-${TAG_NAME#v} to ${{ github.event.inputs.to_env }}

on:
  workflow_dispatch:
    inputs:
      from_tag:
        description: 'Tag (v1.0.0)'
        required: true
      to_env:
        description: 'Env (dev, hml or prd)'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - hml
          - prd

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TAG_NAME: ${{ github.event_name == 'release' && github.ref_name || github.event.inputs.from_tag }}
    steps:

      - name: üìÜ Determine Environment
        id: set-env
        run: |
          echo "DEPLOY_ENV=${{ github.event.inputs.to_env }}" >> $GITHUB_ENV
          if [[ "${{ github.event.inputs.to_env }}" == "dev" ]]; then
            echo "APP_NAME=virtual-card-platform-dev" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.to_env }}" == "hml" ]]; then
            echo "APP_NAME=virtual-card-platform-hml" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.to_env }}" == "prd" ]]; then
            echo "APP_NAME=virtual-card-platform-prd" >> $GITHUB_ENV
          else
            echo "Invalid environment: ${{ github.event.inputs.to_env }}"
            exit 1
          fi
          echo "CURRENT_RELEASE=release-${TAG_NAME#v}" >> $GITHUB_ENV

      - name: üìÖ Checkout Code from Tag
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TAG_NAME }}

      - name: üì¶ Creating ${{ env.CURRENT_RELEASE }}
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          RELEASE_NAME="release-${TAG_NAME#v}"
          echo "üîç Checking if release '$RELEASE_NAME' exists..."
          if gh release view "$RELEASE_NAME" > /dev/null 2>&1; then
            echo "‚úÖ Release already exists: $RELEASE_NAME"
          else
            echo "üöÄ Creating release: $RELEASE_NAME"
            gh release create "${TAG_NAME}" \
              --title "$RELEASE_NAME" \
              --notes "Auto-created release for $TAG_NAME" \
              --latest=false
          fi

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: üõ†Ô∏è Building with Maven
        run: mvn clean package -DskipTests

      - name: üê≥ Building Docker Image
        run: docker build -t virtual-card-platform .

      - name: üöÄ Deploy to Heroku in (${{ env.DEPLOY_ENV }})
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
        run: |
          echo "Deploying ${TAG_NAME} to ${DEPLOY_ENV}..."
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku container:login
          heroku config:set SPRING_PROFILES_ACTIVE=${DEPLOY_ENV} --app $APP_NAME
          heroku container:push web --app $APP_NAME
          heroku container:release web --app $APP_NAME
