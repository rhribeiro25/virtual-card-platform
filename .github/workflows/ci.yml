name: Java CI with Maven in Docker

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: maven:3.9.6-eclipse-temurin-17
      options: --user root

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Build with Maven inside container
        run: mvn clean install --no-transfer-progress

      - name: ✅ Run tests
        run: mvn test

      - name: 📄 Generate JaCoCo coverage report
        run: mvn jacoco:report

      - name: 📤 Upload JaCoCo HTML report (as downloadable artifact)
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: 📁 Move JaCoCo HTML to docs folder (for GitHub Pages)
        run: |
          mkdir -p docs
          cp -r target/site/jacoco/* docs/

      - name: 🚀 Deploy GitHub Pages with report
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_dir: ./docs

      - name: 🛠️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📤 Install Node.js dependencies
        run: npm install
        working-directory: scripts

      - name: 🗃️ Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            scripts/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('scripts/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📷 Generate screenshot from JaCoCo HTML
        run: npm run screenshot
        working-directory: scripts

      - name: ↪️ Commit coverage image to repo
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'
          git add src/main/resources/static/docs/images/coverage/coverage.png
          git commit -m "Update JaCoCo coverage image" || echo "No changes"
          git push

      - name: 🚨 Check code quality with SpotBugs (optional)
        run: mvn com.github.spotbugs:spotbugs-maven-plugin:check -Dspotbugs.failOnError=false

      - name: ✅ Build finished
        run: echo "Build and report published successfully ✅"
